2024-11-12 12:25:54,985 - DEBUG - Building SSL context
2024-11-12 12:25:55,040 - DEBUG - Switching to SSL
2024-11-12 12:25:55,045 - DEBUG - SSL has been enabled
2024-11-12 12:25:55,045 - DEBUG - Starting authorization phase
2024-11-12 12:25:55,045 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:25:55,045 - DEBUG - Exchanging further packets
2024-11-12 12:25:55,045 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:27:43,945 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\nYou are a financial expert tasked with providing accurate and comprehensive information and advice related to financial matters. This includes company data, investments, market conditions, and economic trends.\n\nLanguage Instructions:\n- Provide answers primarily in Thai.\n- Use English for specific financial terms when necessary.\n\nSource of Information:\n- Use only the information available in the context provided.\n- Do not use knowledge learned independently.\n\nTOOLS:\nYou can use the following tools, but avoid using General_Chat if possible:\n\nGeneral Chat(input_text) - For general conversations about financial information not covered by other tools\nsearch company's data(input_text) - Use to find company's financial ratios and financial information using queries.\n\nTo use a tool, please follow these steps:\n\n1. Determine if the information needed to answer the question is available in the context.\n2. If the information is not available, decide if the tool is appropriate for retrieving it.\n3. If the tool should be used, follow this format:\n\n```\nThought: Is it necessary to use a tool? Yes\nAction: The action to be taken should be one of [General Chat, search company's data]\nAction Input: Information used for the action\nObservation: The result of the action\n```\n\nWhen you have an answer to provide to the user or if it's unnecessary to use a tool, use the following format:\n                                               \n```\nThought: Is it necessary to use a tool? No\nFinal Answer: [Your answer here]\n```\n\nBegin!\n\nPrevious conversation history:\n[]\n\nNew message: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\n\n"}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nObservation'], 'stream': True, 'temperature': 0.7}}
2024-11-12 12:27:43,985 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:27:43,985 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-12 12:27:44,305 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025D1F5250D0>
2024-11-12 12:27:44,305 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000025D1CFF4DD0> server_hostname='api.groq.com' timeout=None
2024-11-12 12:27:44,525 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025D1F5C0290>
2024-11-12 12:27:44,525 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:27:44,525 - DEBUG - send_request_headers.complete
2024-11-12 12:27:44,525 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:27:44,526 - DEBUG - send_request_body.complete
2024-11-12 12:27:44,526 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:27:44,975 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:27:43 GMT'), (b'Content-Type', b'text/event-stream'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'no-cache'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5566'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.34s'), (b'x-request-id', b'req_01jcfdf3rwfveapt8cgb361my1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=y794mkdLquI46pDSeMkcw7z0u90FY0uAQB5e4x8PsE0-1731389263-1.0.1.1-tzIPt9UhzN2w4VqFXOZyjZhZTw7xxeB65pTmyCOUGZ9NcXwHRwR9n.C_G.KGSsFlm9j.TBc7.8qkxhRevadLlg; path=/; expires=Tue, 12-Nov-24 05:57:43 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141d511b56a138-SIN')])
2024-11-12 12:27:44,982 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:27:44,982 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:27:43 GMT', 'content-type': 'text/event-stream', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5566', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.34s', 'x-request-id': 'req_01jcfdf3rwfveapt8cgb361my1', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=y794mkdLquI46pDSeMkcw7z0u90FY0uAQB5e4x8PsE0-1731389263-1.0.1.1-tzIPt9UhzN2w4VqFXOZyjZhZTw7xxeB65pTmyCOUGZ9NcXwHRwR9n.C_G.KGSsFlm9j.TBc7.8qkxhRevadLlg; path=/; expires=Tue, 12-Nov-24 05:57:43 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e141d511b56a138-SIN'})
2024-11-12 12:27:44,982 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:27:45,289 - DEBUG - receive_response_body.complete
2024-11-12 12:27:45,289 - DEBUG - response_closed.started
2024-11-12 12:27:45,289 - DEBUG - response_closed.complete
2024-11-12 12:27:45,487 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: ADVANC total assets Q1 2019\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-12 12:27:45,487 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:27:45,487 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:27:45,487 - DEBUG - send_request_headers.complete
2024-11-12 12:27:45,487 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:27:45,487 - DEBUG - send_request_body.complete
2024-11-12 12:27:45,487 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:27:46,459 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:27:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'4367'), (b'x-ratelimit-reset-requests', b'11.044s'), (b'x-ratelimit-reset-tokens', b'16.326999999s'), (b'x-request-id', b'req_01jcfdf4pff5tvjbjjmv640gfs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141d5719fea138-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:27:46,459 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:27:46,459 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:27:46,465 - DEBUG - receive_response_body.complete
2024-11-12 12:27:46,465 - DEBUG - response_closed.started
2024-11-12 12:27:46,465 - DEBUG - response_closed.complete
2024-11-12 12:27:46,465 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:27:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '4367', 'x-ratelimit-reset-requests': '11.044s', 'x-ratelimit-reset-tokens': '16.326999999s', 'x-request-id': 'req_01jcfdf4pff5tvjbjjmv640gfs', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141d5719fea138-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:27:46,491 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\nTable: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n\n\nQuestion:\nADVANC total assets Q1 2019\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-12 12:27:46,491 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:27:46,491 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:27:46,491 - DEBUG - send_request_headers.complete
2024-11-12 12:27:46,491 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:27:46,491 - DEBUG - send_request_body.complete
2024-11-12 12:27:46,491 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:27:47,925 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:27:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'2771'), (b'x-ratelimit-reset-requests', b'16.257s'), (b'x-ratelimit-reset-tokens', b'32.287s'), (b'x-request-id', b'req_01jcfdf6d5f5ttm6pmk8cwejsg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141d5d598ca138-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:27:47,925 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:27:47,925 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:27:47,925 - DEBUG - receive_response_body.complete
2024-11-12 12:27:47,925 - DEBUG - response_closed.started
2024-11-12 12:27:47,925 - DEBUG - response_closed.complete
2024-11-12 12:27:47,925 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:27:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '2771', 'x-ratelimit-reset-requests': '16.257s', 'x-ratelimit-reset-tokens': '32.287s', 'x-request-id': 'req_01jcfdf6d5f5ttm6pmk8cwejsg', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141d5d598ca138-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:27:47,925 - INFO - Generated SQL Query: USE financials;
SELECT totalAssets 
FROM financial_statements 
WHERE symbol = 'ADVANC' AND year = 2019 AND quarter = 1;
2024-11-12 12:27:47,929 - INFO - SQL Query Result: [(Decimal('296633567.00'),)]
2024-11-12 12:27:47,995 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\nYou are a financial expert tasked with providing accurate and comprehensive information and advice related to financial matters. This includes company data, investments, market conditions, and economic trends.\n\nLanguage Instructions:\n- Provide answers primarily in Thai.\n- Use English for specific financial terms when necessary.\n\nSource of Information:\n- Use only the information available in the context provided.\n- Do not use knowledge learned independently.\n\nTOOLS:\nYou can use the following tools, but avoid using General_Chat if possible:\n\nGeneral Chat(input_text) - For general conversations about financial information not covered by other tools\nsearch company's data(input_text) - Use to find company's financial ratios and financial information using queries.\n\nTo use a tool, please follow these steps:\n\n1. Determine if the information needed to answer the question is available in the context.\n2. If the information is not available, decide if the tool is appropriate for retrieving it.\n3. If the tool should be used, follow this format:\n\n```\nThought: Is it necessary to use a tool? Yes\nAction: The action to be taken should be one of [General Chat, search company's data]\nAction Input: Information used for the action\nObservation: The result of the action\n```\n\nWhen you have an answer to provide to the user or if it's unnecessary to use a tool, use the following format:\n                                               \n```\nThought: Is it necessary to use a tool? No\nFinal Answer: [Your answer here]\n```\n\nBegin!\n\nPrevious conversation history:\n[]\n\nNew message: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nThought: Is it necessary to use a tool? Yes\nAction: search company's data\nAction Input: ADVANC total assets Q1 2019\nObservation:     totalAssets\n0  296633567.00\nThought: \n"}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nObservation'], 'stream': True, 'temperature': 0.7}}
2024-11-12 12:27:47,995 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:27:47,995 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:27:47,995 - DEBUG - send_request_headers.complete
2024-11-12 12:27:47,995 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:27:47,995 - DEBUG - send_request_body.complete
2024-11-12 12:27:47,995 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:27:48,455 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:27:47 GMT'), (b'Content-Type', b'text/event-stream'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'no-cache'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'2019'), (b'x-ratelimit-reset-requests', b'23.234999999s'), (b'x-ratelimit-reset-tokens', b'39.802s'), (b'x-request-id', b'req_01jcfdf753e9s906ngt30fjrk4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141d66cbdea138-SIN')])
2024-11-12 12:27:48,455 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:27:48,455 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:27:47 GMT', 'content-type': 'text/event-stream', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '2019', 'x-ratelimit-reset-requests': '23.234999999s', 'x-ratelimit-reset-tokens': '39.802s', 'x-request-id': 'req_01jcfdf753e9s906ngt30fjrk4', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141d66cbdea138-SIN'})
2024-11-12 12:27:48,455 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:27:48,725 - DEBUG - receive_response_body.complete
2024-11-12 12:27:48,725 - DEBUG - response_closed.started
2024-11-12 12:27:48,725 - DEBUG - response_closed.complete
2024-11-12 12:28:42,365 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\nYou are a financial expert tasked with providing accurate and comprehensive information and advice related to financial matters. This includes company data, investments, market conditions, and economic trends.\n\nLanguage Instructions:\n- Provide answers primarily in Thai.\n- Use English for specific financial terms when necessary.\n\nSource of Information:\n- Use only the information available in the context provided.\n- Do not use knowledge learned independently.\n\nTOOLS:\nYou can use the following tools, but avoid using General_Chat if possible:\n\nGeneral Chat(input_text) - For general conversations about financial information not covered by other tools\nsearch company's data(input_text) - Use to find company's financial ratios and financial information using queries.\n\nTo use a tool, please follow these steps:\n\n1. Determine if the information needed to answer the question is available in the context.\n2. If the information is not available, decide if the tool is appropriate for retrieving it.\n3. If the tool should be used, follow this format:\n\n```\nThought: Is it necessary to use a tool? Yes\nAction: The action to be taken should be one of [General Chat, search company's data]\nAction Input: Information used for the action\nObservation: The result of the action\n```\n\nWhen you have an answer to provide to the user or if it's unnecessary to use a tool, use the following format:\n                                               \n```\nThought: Is it necessary to use a tool? No\nFinal Answer: [Your answer here]\n```\n\nBegin!\n\nPrevious conversation history:\n[]\n\nNew message: \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\n\n"}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nObservation'], 'stream': True, 'temperature': 0.7}}
2024-11-12 12:28:42,365 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:28:42,365 - DEBUG - close.started
2024-11-12 12:28:42,369 - DEBUG - close.complete
2024-11-12 12:28:42,369 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-12 12:28:42,585 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025D1F5DF0D0>
2024-11-12 12:28:42,585 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000025D1CFF4DD0> server_hostname='api.groq.com' timeout=None
2024-11-12 12:28:42,807 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000025D1FAE2050>
2024-11-12 12:28:42,810 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:28:42,810 - DEBUG - send_request_headers.complete
2024-11-12 12:28:42,810 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:28:42,810 - DEBUG - send_request_body.complete
2024-11-12 12:28:42,810 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:28:43,286 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:28:42 GMT'), (b'Content-Type', b'text/event-stream'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'no-cache'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5550'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'4.5s'), (b'x-request-id', b'req_01jcfdgwnmfmsb60tnfhnvbpq8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141ebd5bd8ce0a-SIN')])
2024-11-12 12:28:43,287 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:28:43,287 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:28:42 GMT', 'content-type': 'text/event-stream', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5550', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '4.5s', 'x-request-id': 'req_01jcfdgwnmfmsb60tnfhnvbpq8', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141ebd5bd8ce0a-SIN'})
2024-11-12 12:28:43,287 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:28:43,875 - DEBUG - receive_response_body.complete
2024-11-12 12:28:43,875 - DEBUG - response_closed.started
2024-11-12 12:28:43,875 - DEBUG - response_closed.complete
2024-11-12 12:28:44,035 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: ADVANC\'s and BBL\'s operating cash flow for Q1 2021\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-12 12:28:44,035 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:28:44,035 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:28:44,035 - DEBUG - send_request_headers.complete
2024-11-12 12:28:44,035 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:28:44,035 - DEBUG - send_request_body.complete
2024-11-12 12:28:44,035 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:28:45,109 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:28:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'4243'), (b'x-ratelimit-reset-requests', b'10.771s'), (b'x-ratelimit-reset-tokens', b'17.561999999s'), (b'x-request-id', b'req_01jcfdgxw1fmsa9ezw511p8wmv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141ec50c18ce0a-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:28:45,109 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:28:45,109 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:28:45,109 - DEBUG - receive_response_body.complete
2024-11-12 12:28:45,109 - DEBUG - response_closed.started
2024-11-12 12:28:45,109 - DEBUG - response_closed.complete
2024-11-12 12:28:45,109 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:28:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '4243', 'x-ratelimit-reset-requests': '10.771s', 'x-ratelimit-reset-tokens': '17.561999999s', 'x-request-id': 'req_01jcfdgxw1fmsa9ezw511p8wmv', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141ec50c18ce0a-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:28:45,127 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\nTable: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n\n\nQuestion:\nADVANC\'s and BBL\'s operating cash flow for Q1 2021\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-12 12:28:45,127 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:28:45,127 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:28:45,127 - DEBUG - send_request_headers.complete
2024-11-12 12:28:45,127 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:28:45,127 - DEBUG - send_request_body.complete
2024-11-12 12:28:45,127 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:28:45,817 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:28:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'2465'), (b'x-ratelimit-reset-requests', b'16.906999999s'), (b'x-ratelimit-reset-tokens', b'35.344s'), (b'x-request-id', b'req_01jcfdgyy6f798xdhqfpj9e837'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141ecbdabace0a-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:28:45,817 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:28:45,817 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:28:45,817 - DEBUG - receive_response_body.complete
2024-11-12 12:28:45,817 - DEBUG - response_closed.started
2024-11-12 12:28:45,817 - DEBUG - response_closed.complete
2024-11-12 12:28:45,817 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:28:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '2465', 'x-ratelimit-reset-requests': '16.906999999s', 'x-ratelimit-reset-tokens': '35.344s', 'x-request-id': 'req_01jcfdgyy6f798xdhqfpj9e837', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141ecbdabace0a-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:28:45,817 - INFO - Generated SQL Query: USE financials;
SELECT symbol, operatingCashFlow 
FROM financial_statements 
WHERE (symbol = 'ADVANC' OR symbol = 'BBL') 
AND year = 2021 
AND quarter = 1;
2024-11-12 12:28:45,825 - INFO - SQL Query Result: [('ADVANC', Decimal('20764808.00')), ('BBL', Decimal('-89356740.00'))]
2024-11-12 12:28:45,858 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': "\nYou are a financial expert tasked with providing accurate and comprehensive information and advice related to financial matters. This includes company data, investments, market conditions, and economic trends.\n\nLanguage Instructions:\n- Provide answers primarily in Thai.\n- Use English for specific financial terms when necessary.\n\nSource of Information:\n- Use only the information available in the context provided.\n- Do not use knowledge learned independently.\n\nTOOLS:\nYou can use the following tools, but avoid using General_Chat if possible:\n\nGeneral Chat(input_text) - For general conversations about financial information not covered by other tools\nsearch company's data(input_text) - Use to find company's financial ratios and financial information using queries.\n\nTo use a tool, please follow these steps:\n\n1. Determine if the information needed to answer the question is available in the context.\n2. If the information is not available, decide if the tool is appropriate for retrieving it.\n3. If the tool should be used, follow this format:\n\n```\nThought: Is it necessary to use a tool? Yes\nAction: The action to be taken should be one of [General Chat, search company's data]\nAction Input: Information used for the action\nObservation: The result of the action\n```\n\nWhen you have an answer to provide to the user or if it's unnecessary to use a tool, use the following format:\n                                               \n```\nThought: Is it necessary to use a tool? No\nFinal Answer: [Your answer here]\n```\n\nBegin!\n\nPrevious conversation history:\n[]\n\nNew message: \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\nThought: Is it necessary to use a tool? Yes\nAction: search company's data\nAction Input: ADVANC's and BBL's operating cash flow for Q1 2021\nObservation:    symbol operatingCashFlow\n0  ADVANC       20764808.00\n1     BBL      -89356740.00\nThought: \n"}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nObservation'], 'stream': True, 'temperature': 0.7}}
2024-11-12 12:28:45,858 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:28:45,858 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:28:45,858 - DEBUG - send_request_headers.complete
2024-11-12 12:28:45,858 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:28:45,858 - DEBUG - send_request_body.complete
2024-11-12 12:28:45,858 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:28:46,315 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:28:45 GMT'), (b'Content-Type', b'text/event-stream'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'no-cache'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'1677'), (b'x-ratelimit-reset-requests', b'23.268s'), (b'x-ratelimit-reset-tokens', b'43.229s'), (b'x-request-id', b'req_01jcfdgzn3f79bvfb7zfb9jqcb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e141ed06ac4ce0a-SIN')])
2024-11-12 12:28:46,315 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:28:46,319 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:28:45 GMT', 'content-type': 'text/event-stream', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '1677', 'x-ratelimit-reset-requests': '23.268s', 'x-ratelimit-reset-tokens': '43.229s', 'x-request-id': 'req_01jcfdgzn3f79bvfb7zfb9jqcb', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e141ed06ac4ce0a-SIN'})
2024-11-12 12:28:46,319 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:28:46,795 - DEBUG - receive_response_body.complete
2024-11-12 12:28:46,795 - DEBUG - response_closed.started
2024-11-12 12:28:46,795 - DEBUG - response_closed.complete
2024-11-12 12:43:59,647 - DEBUG - Building SSL context
2024-11-12 12:43:59,681 - DEBUG - Switching to SSL
2024-11-12 12:43:59,683 - DEBUG - SSL has been enabled
2024-11-12 12:43:59,684 - DEBUG - Starting authorization phase
2024-11-12 12:43:59,684 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:43:59,684 - DEBUG - Exchanging further packets
2024-11-12 12:43:59,684 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:46:25,611 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:46:25,612 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:46:25,832 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:46:25,833 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:46:26,051 - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-MiniLM-L6-v2
2024-11-12 12:46:26,053 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-12 12:46:26,440 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:46:26,722 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/1.1" 200 0
2024-11-12 12:46:27,072 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/README.md HTTP/1.1" 200 0
2024-11-12 12:46:27,348 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:46:27,623 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/1.1" 200 0
2024-11-12 12:46:27,902 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config.json HTTP/1.1" 200 0
2024-11-12 12:46:28,239 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2024-11-12 12:46:28,547 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2/revision/main HTTP/1.1" 200 6680
2024-11-12 12:46:28,828 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2 HTTP/1.1" 200 6680
2024-11-12 12:46:28,829 - INFO - 2 prompts are loaded, with the keys: ['query', 'text']
2024-11-12 12:46:28,831 - DEBUG - Building SSL context
2024-11-12 12:46:28,866 - DEBUG - Switching to SSL
2024-11-12 12:46:28,869 - DEBUG - SSL has been enabled
2024-11-12 12:46:28,869 - DEBUG - Starting authorization phase
2024-11-12 12:46:28,869 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:46:28,869 - DEBUG - Exchanging further packets
2024-11-12 12:46:28,870 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:46:28,879 - DEBUG - Building SSL context
2024-11-12 12:46:28,915 - DEBUG - Switching to SSL
2024-11-12 12:46:28,917 - DEBUG - SSL has been enabled
2024-11-12 12:46:28,917 - DEBUG - Starting authorization phase
2024-11-12 12:46:28,917 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:46:28,917 - DEBUG - Exchanging further packets
2024-11-12 12:46:28,918 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:47:17,051 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:47:17,052 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:47:17,277 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:47:17,278 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:47:17,494 - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-MiniLM-L6-v2
2024-11-12 12:47:17,495 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-12 12:47:18,641 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:47:19,390 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/1.1" 200 0
2024-11-12 12:47:19,667 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/README.md HTTP/1.1" 200 0
2024-11-12 12:47:19,943 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:47:20,224 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/1.1" 200 0
2024-11-12 12:47:20,501 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config.json HTTP/1.1" 200 0
2024-11-12 12:47:20,831 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2024-11-12 12:47:21,138 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2/revision/main HTTP/1.1" 200 6681
2024-11-12 12:47:21,424 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2 HTTP/1.1" 200 6681
2024-11-12 12:47:21,425 - INFO - 2 prompts are loaded, with the keys: ['query', 'text']
2024-11-12 12:47:21,427 - DEBUG - Building SSL context
2024-11-12 12:47:21,464 - DEBUG - Switching to SSL
2024-11-12 12:47:21,468 - DEBUG - SSL has been enabled
2024-11-12 12:47:21,468 - DEBUG - Starting authorization phase
2024-11-12 12:47:21,468 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:47:21,468 - DEBUG - Exchanging further packets
2024-11-12 12:47:21,468 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:47:21,476 - DEBUG - Building SSL context
2024-11-12 12:47:21,513 - DEBUG - Switching to SSL
2024-11-12 12:47:21,516 - DEBUG - SSL has been enabled
2024-11-12 12:47:21,516 - DEBUG - Starting authorization phase
2024-11-12 12:47:21,516 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:47:21,517 - DEBUG - Exchanging further packets
2024-11-12 12:47:21,517 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:48:09,780 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:48:09,781 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:48:10,003 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-12 12:48:10,004 - DEBUG - load_verify_locations cafile='C:\\Users\\china\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\certifi\\cacert.pem'
2024-11-12 12:48:10,223 - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-MiniLM-L6-v2
2024-11-12 12:48:10,224 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-12 12:48:11,085 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:48:11,862 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/1.1" 200 0
2024-11-12 12:48:12,612 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/README.md HTTP/1.1" 200 0
2024-11-12 12:48:12,890 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/modules.json HTTP/1.1" 200 0
2024-11-12 12:48:13,165 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/1.1" 200 0
2024-11-12 12:48:13,654 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/config.json HTTP/1.1" 200 0
2024-11-12 12:48:14,444 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/all-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/1.1" 200 0
2024-11-12 12:48:15,218 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2/revision/main HTTP/1.1" 200 6680
2024-11-12 12:48:15,506 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/all-MiniLM-L6-v2 HTTP/1.1" 200 6680
2024-11-12 12:48:15,506 - INFO - 2 prompts are loaded, with the keys: ['query', 'text']
2024-11-12 12:48:15,509 - DEBUG - Building SSL context
2024-11-12 12:48:15,540 - DEBUG - Switching to SSL
2024-11-12 12:48:15,542 - DEBUG - SSL has been enabled
2024-11-12 12:48:15,543 - DEBUG - Starting authorization phase
2024-11-12 12:48:15,543 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:48:15,543 - DEBUG - Exchanging further packets
2024-11-12 12:48:15,543 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:48:15,556 - DEBUG - Building SSL context
2024-11-12 12:48:15,588 - DEBUG - Switching to SSL
2024-11-12 12:48:15,589 - DEBUG - SSL has been enabled
2024-11-12 12:48:15,590 - DEBUG - Starting authorization phase
2024-11-12 12:48:15,590 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:48:15,590 - DEBUG - Exchanging further packets
2024-11-12 12:48:15,590 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:48:16,477 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-12 12:48:16,504 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:48:16,504 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-12 12:48:16,746 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020895336C50>
2024-11-12 12:48:16,746 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020895211FD0> server_hostname='api.groq.com' timeout=None
2024-11-12 12:48:16,960 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002089532C310>
2024-11-12 12:48:16,960 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:48:16,961 - DEBUG - send_request_headers.complete
2024-11-12 12:48:16,961 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:48:16,961 - DEBUG - send_request_body.complete
2024-11-12 12:48:16,961 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:48:17,792 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:48:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4729'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.71s'), (b'x-request-id', b'req_01jcfemqanfmp8wwspjzcaz0vx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=lrLi3TWBKMOb538tn105cSvyEUNGLjKPw2YcbrzYrw0-1731390496-1.0.1.1-nDJjvxUPtq2kd1yQLTo2hnGh1f0TgrGdpRVFEBOF28uz5jD.URjX6f.hnOPR66c2I4epx_ACzuTIPO4OoHhtgg; path=/; expires=Tue, 12-Nov-24 06:18:16 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e143b67ee8bce3d-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:48:17,792 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:48:17,793 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:48:17,793 - DEBUG - receive_response_body.complete
2024-11-12 12:48:17,793 - DEBUG - response_closed.started
2024-11-12 12:48:17,793 - DEBUG - response_closed.complete
2024-11-12 12:48:17,793 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:48:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4729', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.71s', 'x-request-id': 'req_01jcfemqanfmp8wwspjzcaz0vx', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=lrLi3TWBKMOb538tn105cSvyEUNGLjKPw2YcbrzYrw0-1731390496-1.0.1.1-nDJjvxUPtq2kd1yQLTo2hnGh1f0TgrGdpRVFEBOF28uz5jD.URjX6f.hnOPR66c2I4epx_ACzuTIPO4OoHhtgg; path=/; expires=Tue, 12-Nov-24 06:18:16 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e143b67ee8bce3d-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:48:17,809 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\n{\'filteredeoddata\': {\'date\': \'DATE\', \'symbol\': \'VARCHAR(255)\', \'securityType\': \'VARCHAR(10)\', \'adjustedPriceFlag\': \'CHAR(1)\', \'prior\': \'DECIMAL(10, 2)\', \'open\': \'DECIMAL(10, 2)\', \'high\': \'DECIMAL(10, 2)\', \'low\': \'DECIMAL(10, 2)\', \'close\': \'DECIMAL(10, 2)\', \'average\': \'DECIMAL(15, 10)\', \'aomVolume\': \'DECIMAL(15, 2)\', \'aomValue\': \'DECIMAL(15, 2)\', \'trVolume\': \'DECIMAL(15, 2)\', \'trValue\': \'DECIMAL(15, 2)\', \'totalVolume\': \'DECIMAL(15, 2)\', \'totalValue\': \'DECIMAL(15, 2)\', \'pe\': \'DECIMAL(10, 2)\', \'pbv\': \'DECIMAL(10, 2)\', \'bvps\': \'DECIMAL(10, 2)\', \'dividendYield\': \'DECIMAL(10, 2)\', \'marketCap\': \'DECIMAL(20, 2)\', \'volumeTurnover\': \'DECIMAL(10, 8)\'}, \'financial_statements\': {\'symbol\': \'VARCHAR(50)\', \'year\': \'INTEGER\', \'quarter\': \'INTEGER\', \'financialStatementType\': \'VARCHAR(10)\', \'dateAsof\': \'DATE\', \'accountPeriod\': \'VARCHAR(10)\', \'totalAssets\': \'DECIMAL(20, 2)\', \'totalLiabilities\': \'DECIMAL(20, 2)\', \'paidupShareCapital\': \'DECIMAL(20, 2)\', \'shareholderEquity\': \'DECIMAL(20, 2)\', \'totalEquity\': \'DECIMAL(20, 2)\', \'totalRevenueQuarter\': \'DECIMAL(20, 2)\', \'totalRevenueAccum\': \'DECIMAL(20, 2)\', \'totalExpensesQuarter\': \'DECIMAL(20, 2)\', \'totalExpensesAccum\': \'DECIMAL(20, 2)\', \'ebitQuarter\': \'DECIMAL(20, 2)\', \'ebitAccum\': \'DECIMAL(20, 2)\', \'netProfitQuarter\': \'DECIMAL(20, 2)\', \'netProfitAccum\': \'DECIMAL(20, 2)\', \'epsQuarter\': \'DECIMAL(10, 2)\', \'epsAccum\': \'DECIMAL(10, 2)\', \'operatingCashFlow\': \'DECIMAL(20, 2)\', \'investingCashFlow\': \'DECIMAL(20, 2)\', \'financingCashFlow\': \'DECIMAL(20, 2)\', \'roe\': \'DECIMAL(10, 2)\', \'roa\': \'DECIMAL(10, 2)\', \'netProfitMarginQuarter\': \'DECIMAL(10, 2)\', \'netProfitMarginAccum\': \'DECIMAL(10, 2)\', \'de\': \'DECIMAL(10, 2)\', \'fixedAssetTurnover\': \'DECIMAL(10, 2)\', \'totalAssetTurnover\': \'DECIMAL(10, 2)\'}}\n\nQuestion:\n\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-12 12:48:17,811 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:48:17,811 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:48:17,811 - DEBUG - send_request_headers.complete
2024-11-12 12:48:17,811 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:48:17,811 - DEBUG - send_request_body.complete
2024-11-12 12:48:17,812 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:48:18,462 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:48:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'3118'), (b'x-ratelimit-reset-requests', b'11.149s'), (b'x-ratelimit-reset-tokens', b'28.816999999s'), (b'x-request-id', b'req_01jcfemr51fmp8a68tx2x69gzn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e143b6d3957ce3d-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:48:18,462 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:48:18,462 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:48:18,463 - DEBUG - receive_response_body.complete
2024-11-12 12:48:18,463 - DEBUG - response_closed.started
2024-11-12 12:48:18,463 - DEBUG - response_closed.complete
2024-11-12 12:48:18,463 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:48:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '3118', 'x-ratelimit-reset-requests': '11.149s', 'x-ratelimit-reset-tokens': '28.816999999s', 'x-request-id': 'req_01jcfemr51fmp8a68tx2x69gzn', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e143b6d3957ce3d-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:48:49,176 - DEBUG - Building SSL context
2024-11-12 12:48:49,213 - DEBUG - Switching to SSL
2024-11-12 12:48:49,216 - DEBUG - SSL has been enabled
2024-11-12 12:48:49,216 - DEBUG - Starting authorization phase
2024-11-12 12:48:49,216 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-12 12:48:49,216 - DEBUG - Exchanging further packets
2024-11-12 12:48:49,216 - DEBUG - caching_sha2_password completed succesfully
2024-11-12 12:48:57,294 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-12 12:48:57,315 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:48:57,315 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-12 12:48:57,537 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D9F0371410>
2024-11-12 12:48:57,537 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D9EDFF8950> server_hostname='api.groq.com' timeout=None
2024-11-12 12:48:57,765 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D9EEF75710>
2024-11-12 12:48:57,765 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:48:57,765 - DEBUG - send_request_headers.complete
2024-11-12 12:48:57,766 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:48:57,766 - DEBUG - send_request_body.complete
2024-11-12 12:48:57,766 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:48:58,962 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:48:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4712'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.88s'), (b'x-request-id', b'req_01jcfenz5pftyvejxdcq6g2aht'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=uNrnL59evsuivU8b8eQPgXzDy16Qg_Dx4LfidwmAoqo-1731390537-1.0.1.1-VCBT4522hluIqK89kmzclMMGbB5SpfkJD8TgW5UTRGeEtS6ycsIhY73hP_QEmROcJPhPSv6zD81VmUqi80pCdQ; path=/; expires=Tue, 12-Nov-24 06:18:57 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e143c66ed1381c5-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:48:58,963 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:48:58,963 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:48:58,963 - DEBUG - receive_response_body.complete
2024-11-12 12:48:58,963 - DEBUG - response_closed.started
2024-11-12 12:48:58,963 - DEBUG - response_closed.complete
2024-11-12 12:48:58,963 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:48:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4712', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.88s', 'x-request-id': 'req_01jcfenz5pftyvejxdcq6g2aht', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=uNrnL59evsuivU8b8eQPgXzDy16Qg_Dx4LfidwmAoqo-1731390537-1.0.1.1-VCBT4522hluIqK89kmzclMMGbB5SpfkJD8TgW5UTRGeEtS6ycsIhY73hP_QEmROcJPhPSv6zD81VmUqi80pCdQ; path=/; expires=Tue, 12-Nov-24 06:18:57 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e143c66ed1381c5-SIN', 'content-encoding': 'gzip'})
2024-11-12 12:48:58,981 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\n{\'filteredeoddata\': {\'date\': \'DATE\', \'symbol\': \'VARCHAR(255)\', \'securityType\': \'VARCHAR(10)\', \'adjustedPriceFlag\': \'CHAR(1)\', \'prior\': \'DECIMAL(10, 2)\', \'open\': \'DECIMAL(10, 2)\', \'high\': \'DECIMAL(10, 2)\', \'low\': \'DECIMAL(10, 2)\', \'close\': \'DECIMAL(10, 2)\', \'average\': \'DECIMAL(15, 10)\', \'aomVolume\': \'DECIMAL(15, 2)\', \'aomValue\': \'DECIMAL(15, 2)\', \'trVolume\': \'DECIMAL(15, 2)\', \'trValue\': \'DECIMAL(15, 2)\', \'totalVolume\': \'DECIMAL(15, 2)\', \'totalValue\': \'DECIMAL(15, 2)\', \'pe\': \'DECIMAL(10, 2)\', \'pbv\': \'DECIMAL(10, 2)\', \'bvps\': \'DECIMAL(10, 2)\', \'dividendYield\': \'DECIMAL(10, 2)\', \'marketCap\': \'DECIMAL(20, 2)\', \'volumeTurnover\': \'DECIMAL(10, 8)\'}, \'financial_statements\': {\'symbol\': \'VARCHAR(50)\', \'year\': \'INTEGER\', \'quarter\': \'INTEGER\', \'financialStatementType\': \'VARCHAR(10)\', \'dateAsof\': \'DATE\', \'accountPeriod\': \'VARCHAR(10)\', \'totalAssets\': \'DECIMAL(20, 2)\', \'totalLiabilities\': \'DECIMAL(20, 2)\', \'paidupShareCapital\': \'DECIMAL(20, 2)\', \'shareholderEquity\': \'DECIMAL(20, 2)\', \'totalEquity\': \'DECIMAL(20, 2)\', \'totalRevenueQuarter\': \'DECIMAL(20, 2)\', \'totalRevenueAccum\': \'DECIMAL(20, 2)\', \'totalExpensesQuarter\': \'DECIMAL(20, 2)\', \'totalExpensesAccum\': \'DECIMAL(20, 2)\', \'ebitQuarter\': \'DECIMAL(20, 2)\', \'ebitAccum\': \'DECIMAL(20, 2)\', \'netProfitQuarter\': \'DECIMAL(20, 2)\', \'netProfitAccum\': \'DECIMAL(20, 2)\', \'epsQuarter\': \'DECIMAL(10, 2)\', \'epsAccum\': \'DECIMAL(10, 2)\', \'operatingCashFlow\': \'DECIMAL(20, 2)\', \'investingCashFlow\': \'DECIMAL(20, 2)\', \'financingCashFlow\': \'DECIMAL(20, 2)\', \'roe\': \'DECIMAL(10, 2)\', \'roa\': \'DECIMAL(10, 2)\', \'netProfitMarginQuarter\': \'DECIMAL(10, 2)\', \'netProfitMarginAccum\': \'DECIMAL(10, 2)\', \'de\': \'DECIMAL(10, 2)\', \'fixedAssetTurnover\': \'DECIMAL(10, 2)\', \'totalAssetTurnover\': \'DECIMAL(10, 2)\'}}\n\nQuestion:\n\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-12 12:48:58,981 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-12 12:48:58,981 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-12 12:48:58,981 - DEBUG - send_request_headers.complete
2024-11-12 12:48:58,982 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-12 12:48:58,982 - DEBUG - send_request_body.complete
2024-11-12 12:48:58,982 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-12 12:48:59,857 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 12 Nov 2024 05:48:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'3004'), (b'x-ratelimit-reset-requests', b'10.768s'), (b'x-ratelimit-reset-tokens', b'29.956s'), (b'x-request-id', b'req_01jcfep0c3ebyb7g7wpj5gys5p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e143c6e8f8281c5-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-12 12:48:59,857 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-12 12:48:59,857 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-12 12:48:59,858 - DEBUG - receive_response_body.complete
2024-11-12 12:48:59,858 - DEBUG - response_closed.started
2024-11-12 12:48:59,858 - DEBUG - response_closed.complete
2024-11-12 12:48:59,858 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Tue, 12 Nov 2024 05:48:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '3004', 'x-ratelimit-reset-requests': '10.768s', 'x-ratelimit-reset-tokens': '29.956s', 'x-request-id': 'req_01jcfep0c3ebyb7g7wpj5gys5p', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e143c6e8f8281c5-SIN', 'content-encoding': 'gzip'})
2024-11-13 12:40:28,648 - DEBUG - Building SSL context
2024-11-13 12:40:28,689 - DEBUG - Switching to SSL
2024-11-13 12:40:28,692 - DEBUG - SSL has been enabled
2024-11-13 12:40:28,692 - DEBUG - Starting authorization phase
2024-11-13 12:40:28,692 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-13 12:40:28,692 - DEBUG - Exchanging further packets
2024-11-13 12:40:28,692 - DEBUG - caching_sha2_password completed succesfully
2024-11-13 12:41:09,642 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-13 12:41:09,704 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-13 12:41:09,705 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-13 12:41:10,017 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001798C7EC2D0>
2024-11-13 12:41:10,017 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001798B2F4CB0> server_hostname='api.groq.com' timeout=None
2024-11-13 12:41:10,242 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001798C3E01D0>
2024-11-13 12:41:10,243 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-13 12:41:10,243 - DEBUG - send_request_headers.complete
2024-11-13 12:41:10,243 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-13 12:41:10,243 - DEBUG - send_request_body.complete
2024-11-13 12:41:10,243 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-13 12:41:11,165 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 13 Nov 2024 05:41:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4729'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.71s'), (b'x-request-id', b'req_01jcj0md69e5ysj2jjzy295y9g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3WB81mvR_XC8rV6HdQWPl.jq_Kz9lAjom0xr.1oVSvU-1731476469-1.0.1.1-vZxAMgDyadRJiiKChIAA16W6k06tYicYfqgqeeA3Iz6J_Ptg5tjC9Nlc4CI_yNcoCrcpu.X.T5M2jlLejxOpZQ; path=/; expires=Wed, 13-Nov-24 06:11:09 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e1c6e5a3a7a7978-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-13 12:41:11,166 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-13 12:41:11,166 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-13 12:41:11,167 - DEBUG - receive_response_body.complete
2024-11-13 12:41:11,167 - DEBUG - response_closed.started
2024-11-13 12:41:11,168 - DEBUG - response_closed.complete
2024-11-13 12:41:11,168 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 13 Nov 2024 05:41:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4729', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.71s', 'x-request-id': 'req_01jcj0md69e5ysj2jjzy295y9g', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=3WB81mvR_XC8rV6HdQWPl.jq_Kz9lAjom0xr.1oVSvU-1731476469-1.0.1.1-vZxAMgDyadRJiiKChIAA16W6k06tYicYfqgqeeA3Iz6J_Ptg5tjC9Nlc4CI_yNcoCrcpu.X.T5M2jlLejxOpZQ; path=/; expires=Wed, 13-Nov-24 06:11:09 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e1c6e5a3a7a7978-SIN', 'content-encoding': 'gzip'})
2024-11-13 12:41:11,192 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\n{\'filteredeoddata\': {\'date\': \'DATE\', \'symbol\': \'VARCHAR(255)\', \'securityType\': \'VARCHAR(10)\', \'adjustedPriceFlag\': \'CHAR(1)\', \'prior\': \'DECIMAL(10, 2)\', \'open\': \'DECIMAL(10, 2)\', \'high\': \'DECIMAL(10, 2)\', \'low\': \'DECIMAL(10, 2)\', \'close\': \'DECIMAL(10, 2)\', \'average\': \'DECIMAL(15, 10)\', \'aomVolume\': \'DECIMAL(15, 2)\', \'aomValue\': \'DECIMAL(15, 2)\', \'trVolume\': \'DECIMAL(15, 2)\', \'trValue\': \'DECIMAL(15, 2)\', \'totalVolume\': \'DECIMAL(15, 2)\', \'totalValue\': \'DECIMAL(15, 2)\', \'pe\': \'DECIMAL(10, 2)\', \'pbv\': \'DECIMAL(10, 2)\', \'bvps\': \'DECIMAL(10, 2)\', \'dividendYield\': \'DECIMAL(10, 2)\', \'marketCap\': \'DECIMAL(20, 2)\', \'volumeTurnover\': \'DECIMAL(10, 8)\'}, \'financial_statements\': {\'symbol\': \'VARCHAR(50)\', \'year\': \'INTEGER\', \'quarter\': \'INTEGER\', \'financialStatementType\': \'VARCHAR(10)\', \'dateAsof\': \'DATE\', \'accountPeriod\': \'VARCHAR(10)\', \'totalAssets\': \'DECIMAL(20, 2)\', \'totalLiabilities\': \'DECIMAL(20, 2)\', \'paidupShareCapital\': \'DECIMAL(20, 2)\', \'shareholderEquity\': \'DECIMAL(20, 2)\', \'totalEquity\': \'DECIMAL(20, 2)\', \'totalRevenueQuarter\': \'DECIMAL(20, 2)\', \'totalRevenueAccum\': \'DECIMAL(20, 2)\', \'totalExpensesQuarter\': \'DECIMAL(20, 2)\', \'totalExpensesAccum\': \'DECIMAL(20, 2)\', \'ebitQuarter\': \'DECIMAL(20, 2)\', \'ebitAccum\': \'DECIMAL(20, 2)\', \'netProfitQuarter\': \'DECIMAL(20, 2)\', \'netProfitAccum\': \'DECIMAL(20, 2)\', \'epsQuarter\': \'DECIMAL(10, 2)\', \'epsAccum\': \'DECIMAL(10, 2)\', \'operatingCashFlow\': \'DECIMAL(20, 2)\', \'investingCashFlow\': \'DECIMAL(20, 2)\', \'financingCashFlow\': \'DECIMAL(20, 2)\', \'roe\': \'DECIMAL(10, 2)\', \'roa\': \'DECIMAL(10, 2)\', \'netProfitMarginQuarter\': \'DECIMAL(10, 2)\', \'netProfitMarginAccum\': \'DECIMAL(10, 2)\', \'de\': \'DECIMAL(10, 2)\', \'fixedAssetTurnover\': \'DECIMAL(10, 2)\', \'totalAssetTurnover\': \'DECIMAL(10, 2)\'}}\n\nQuestion:\n\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-13 12:41:11,194 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-13 12:41:11,194 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-13 12:41:11,194 - DEBUG - send_request_headers.complete
2024-11-13 12:41:11,194 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-13 12:41:11,194 - DEBUG - send_request_body.complete
2024-11-13 12:41:11,194 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-13 12:41:11,907 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 13 Nov 2024 05:41:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'3112'), (b'x-ratelimit-reset-requests', b'11.052s'), (b'x-ratelimit-reset-tokens', b'28.874s'), (b'x-request-id', b'req_01jcj0me42ebdvrf9mpgwkkajg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e1c6e6029417978-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-13 12:41:11,907 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-13 12:41:11,907 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-13 12:41:11,908 - DEBUG - receive_response_body.complete
2024-11-13 12:41:11,908 - DEBUG - response_closed.started
2024-11-13 12:41:11,908 - DEBUG - response_closed.complete
2024-11-13 12:41:11,908 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 13 Nov 2024 05:41:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '3112', 'x-ratelimit-reset-requests': '11.052s', 'x-ratelimit-reset-tokens': '28.874s', 'x-request-id': 'req_01jcj0me42ebdvrf9mpgwkkajg', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e1c6e6029417978-SIN', 'content-encoding': 'gzip'})
2024-11-13 12:41:28,290 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4 ENGINE=InnoDB\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-13 12:41:28,291 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-13 12:41:28,291 - DEBUG - close.started
2024-11-13 12:41:28,292 - DEBUG - close.complete
2024-11-13 12:41:28,292 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-13 12:41:28,497 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001798CD65490>
2024-11-13 12:41:28,498 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x000001798B2F4CB0> server_hostname='api.groq.com' timeout=None
2024-11-13 12:41:28,710 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001798CC21B90>
2024-11-13 12:41:28,710 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-13 12:41:28,711 - DEBUG - send_request_headers.complete
2024-11-13 12:41:28,711 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-13 12:41:28,711 - DEBUG - send_request_body.complete
2024-11-13 12:41:28,711 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-13 12:41:30,617 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 13 Nov 2024 05:41:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'3343'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'26.566999999s'), (b'x-request-id', b'req_01jcj0n00nfbgarqnsmkgebebr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e1c6ecda98f3fc2-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-13 12:41:30,618 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-13 12:41:30,618 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-13 12:41:30,618 - DEBUG - receive_response_body.complete
2024-11-13 12:41:30,618 - DEBUG - response_closed.started
2024-11-13 12:41:30,618 - DEBUG - response_closed.complete
2024-11-13 12:41:30,618 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 13 Nov 2024 05:41:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '3343', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '26.566999999s', 'x-request-id': 'req_01jcj0n00nfbgarqnsmkgebebr', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e1c6ecda98f3fc2-SIN', 'content-encoding': 'gzip'})
2024-11-13 12:41:30,631 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert in MySQL who translates user questions into SQL queries to find answers about company data in the database.\nTranslate the user\'s questions according to the database schema.\nUse only the types of relationships and properties that exist in the given schema. Do not use other types of relationships or properties that are not in the provided schema.\n\nProvide answers primarily in Thai, but some financial terms may remain in English. If you don\'t know the answer, respond with \'I don\'t know.\'\n\nFine Tuning:\n1.FilteredEODData: table for company financial statement data, available quarterly (de, ebitAccum, ebitQuarter, epsAccum, epsQuarter, financingCashFlow, fixedAssetTurnover, hasQuarter, hasYear, investingCashFlow, netProfitAccum, netProfitMarginAccum, netProfitMarginQuarter, netProfitQuarter, operatingCashFlow, paidupShareCapital, roa, roe, shareholderEquity, totalAssetTurnover, totalAssets, totalEquity, totalExpensesAccum, totalExpensesQuarter, totalLiabilities, totalRevenueAccum, totalRevenueQuarter)\n  financial_statements: tablefor daily company stock price data (average, close, high, low, open, prior, totalVolume), with the date information in the URI, e.g., uri: http://example.org/stock_value_CPALL_2024-01-25.\n2.for example "\u0e02\u0e2d\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25open\u0e02\u0e2d\u0e07\u0e2b\u0e38\u0e49\u0e19BBL\u0e43\u0e19\u0e27\u0e31\u0e19\u0e17\u0e35\u0e482023-09-01" qurey = SELECT open FROM FilteredEODData WHERE symbol = \'BBL\' AND date = \'2023-09-01\' LIMIT 1;\n3.Query:\u0e40\u0e02\u0e35\u0e22\u0e19\u0e43\u0e19```Query```\n   \nSchema:\n{\'filteredeoddata\': {\'date\': \'DATE\', \'symbol\': \'VARCHAR(255)\', \'securityType\': \'VARCHAR(10)\', \'adjustedPriceFlag\': \'CHAR(1)\', \'prior\': \'DECIMAL(10, 2)\', \'open\': \'DECIMAL(10, 2)\', \'high\': \'DECIMAL(10, 2)\', \'low\': \'DECIMAL(10, 2)\', \'close\': \'DECIMAL(10, 2)\', \'average\': \'DECIMAL(15, 10)\', \'aomVolume\': \'DECIMAL(15, 2)\', \'aomValue\': \'DECIMAL(15, 2)\', \'trVolume\': \'DECIMAL(15, 2)\', \'trValue\': \'DECIMAL(15, 2)\', \'totalVolume\': \'DECIMAL(15, 2)\', \'totalValue\': \'DECIMAL(15, 2)\', \'pe\': \'DECIMAL(10, 2)\', \'pbv\': \'DECIMAL(10, 2)\', \'bvps\': \'DECIMAL(10, 2)\', \'dividendYield\': \'DECIMAL(10, 2)\', \'marketCap\': \'DECIMAL(20, 2)\', \'volumeTurnover\': \'DECIMAL(10, 8)\'}, \'financial_statements\': {\'symbol\': \'VARCHAR(50)\', \'year\': \'INTEGER\', \'quarter\': \'INTEGER\', \'financialStatementType\': \'VARCHAR(10)\', \'dateAsof\': \'DATE\', \'accountPeriod\': \'VARCHAR(10)\', \'totalAssets\': \'DECIMAL(20, 2)\', \'totalLiabilities\': \'DECIMAL(20, 2)\', \'paidupShareCapital\': \'DECIMAL(20, 2)\', \'shareholderEquity\': \'DECIMAL(20, 2)\', \'totalEquity\': \'DECIMAL(20, 2)\', \'totalRevenueQuarter\': \'DECIMAL(20, 2)\', \'totalRevenueAccum\': \'DECIMAL(20, 2)\', \'totalExpensesQuarter\': \'DECIMAL(20, 2)\', \'totalExpensesAccum\': \'DECIMAL(20, 2)\', \'ebitQuarter\': \'DECIMAL(20, 2)\', \'ebitAccum\': \'DECIMAL(20, 2)\', \'netProfitQuarter\': \'DECIMAL(20, 2)\', \'netProfitAccum\': \'DECIMAL(20, 2)\', \'epsQuarter\': \'DECIMAL(10, 2)\', \'epsAccum\': \'DECIMAL(10, 2)\', \'operatingCashFlow\': \'DECIMAL(20, 2)\', \'investingCashFlow\': \'DECIMAL(20, 2)\', \'financingCashFlow\': \'DECIMAL(20, 2)\', \'roe\': \'DECIMAL(10, 2)\', \'roa\': \'DECIMAL(10, 2)\', \'netProfitMarginQuarter\': \'DECIMAL(10, 2)\', \'netProfitMarginAccum\': \'DECIMAL(10, 2)\', \'de\': \'DECIMAL(10, 2)\', \'fixedAssetTurnover\': \'DECIMAL(10, 2)\', \'totalAssetTurnover\': \'DECIMAL(10, 2)\'}}\n\nQuestion:\n\u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e23\u0e30\u0e41\u0e2a\u0e40\u0e07\u0e34\u0e19\u0e2a\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e01\u0e31\u0e1a BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2021\n\nMysql Query:\n```\n\n```\n'}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': None, 'stream': False, 'temperature': 0.7}}
2024-11-13 12:41:30,632 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-13 12:41:30,632 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-13 12:41:30,632 - DEBUG - send_request_headers.complete
2024-11-13 12:41:30,632 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-13 12:41:30,632 - DEBUG - send_request_body.complete
2024-11-13 12:41:30,632 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-13 12:41:31,451 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 13 Nov 2024 05:41:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'1717'), (b'x-ratelimit-reset-requests', b'10.905999999s'), (b'x-ratelimit-reset-tokens', b'42.827s'), (b'x-request-id', b'req_01jcj0n136fj8bnahwzp3me3bv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e1c6ed9ae343fc2-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-13 12:41:31,451 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-13 12:41:31,452 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-13 12:41:31,452 - DEBUG - receive_response_body.complete
2024-11-13 12:41:31,452 - DEBUG - response_closed.started
2024-11-13 12:41:31,452 - DEBUG - response_closed.complete
2024-11-13 12:41:31,452 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 13 Nov 2024 05:41:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '1717', 'x-ratelimit-reset-requests': '10.905999999s', 'x-ratelimit-reset-tokens': '42.827s', 'x-request-id': 'req_01jcj0n136fj8bnahwzp3me3bv', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e1c6ed9ae343fc2-SIN', 'content-encoding': 'gzip'})
2024-11-13 14:23:50,036 - DEBUG - Building SSL context
2024-11-13 14:23:50,069 - DEBUG - Switching to SSL
2024-11-13 14:23:50,072 - DEBUG - SSL has been enabled
2024-11-13 14:23:50,072 - DEBUG - Starting authorization phase
2024-11-13 14:23:50,072 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-13 14:23:50,072 - DEBUG - Exchanging further packets
2024-11-13 14:23:50,072 - DEBUG - caching_sha2_password completed succesfully
2024-11-18 13:01:21,314 - DEBUG - Building SSL context
2024-11-18 13:01:21,367 - DEBUG - Switching to SSL
2024-11-18 13:01:21,374 - DEBUG - SSL has been enabled
2024-11-18 13:01:21,374 - DEBUG - Starting authorization phase
2024-11-18 13:01:21,374 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-18 13:01:21,374 - DEBUG - Exchanging further packets
2024-11-18 13:01:21,374 - DEBUG - caching_sha2_password completed succesfully
2024-11-18 13:01:21,779 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:21,779 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:21,779 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-18 13:01:21,932 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294D96190>
2024-11-18 13:01:21,932 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021294594710> server_hostname='api.groq.com' timeout=None
2024-11-18 13:01:22,286 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002129402F910>
2024-11-18 13:01:22,286 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:22,286 - DEBUG - send_request_headers.complete
2024-11-18 13:01:22,286 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:22,286 - DEBUG - send_request_body.complete
2024-11-18 13:01:22,286 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:23,195 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:01:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4729'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.71s'), (b'x-request-id', b'req_01jcyxs1a3etwb967m5meg89de'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=wTNWCGxzZM2rjNKXT6bVTgXvCbPoQlmrEP8qYm3gnbA-1731909683-1.0.1.1-uqBvwOZJOGEHZ4e_LawtYMkDL7OrlSM1XcST74MTreMMXTQmzJhUuIz6mRJMzF1gWBKh9WJnqzqlminMy.pU6g; path=/; expires=Mon, 18-Nov-24 06:31:23 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bedaf90040cb-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:01:23,195 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:01:23,195 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:23,195 - DEBUG - receive_response_body.complete
2024-11-18 13:01:23,195 - DEBUG - response_closed.started
2024-11-18 13:01:23,195 - DEBUG - response_closed.complete
2024-11-18 13:01:23,195 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:01:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4729', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.71s', 'x-request-id': 'req_01jcyxs1a3etwb967m5meg89de', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=wTNWCGxzZM2rjNKXT6bVTgXvCbPoQlmrEP8qYm3gnbA-1731909683-1.0.1.1-uqBvwOZJOGEHZ4e_LawtYMkDL7OrlSM1XcST74MTreMMXTQmzJhUuIz6mRJMzF1gWBKh9WJnqzqlminMy.pU6g; path=/; expires=Mon, 18-Nov-24 06:31:23 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e45bedaf90040cb-SIN', 'content-encoding': 'gzip'})
2024-11-18 13:01:23,437 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:23,437 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:23,437 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:23,437 - DEBUG - send_request_headers.complete
2024-11-18 13:01:23,437 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:23,437 - DEBUG - send_request_body.complete
2024-11-18 13:01:23,437 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:23,898 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:01:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'2711'), (b'x-ratelimit-reset-requests', b'10.833s'), (b'x-ratelimit-reset-tokens', b'32.887s'), (b'x-request-id', b'req_01jcyxs2f3fjvv0ngnphjv90np'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bee239e640cb-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:01:23,898 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:01:23,898 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:23,898 - DEBUG - receive_response_body.complete
2024-11-18 13:01:23,898 - DEBUG - response_closed.started
2024-11-18 13:01:23,898 - DEBUG - response_closed.complete
2024-11-18 13:01:23,898 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:01:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '2711', 'x-ratelimit-reset-requests': '10.833s', 'x-ratelimit-reset-tokens': '32.887s', 'x-request-id': 'req_01jcyxs2f3fjvv0ngnphjv90np', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bee239e640cb-SIN', 'content-encoding': 'gzip'})
2024-11-18 13:01:24,257 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:24,257 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:24,257 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:24,257 - DEBUG - send_request_headers.complete
2024-11-18 13:01:24,257 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:24,257 - DEBUG - send_request_body.complete
2024-11-18 13:01:24,257 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:25,163 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:01:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'818'), (b'x-ratelimit-reset-requests', b'17.2s'), (b'x-ratelimit-reset-tokens', b'51.818999999s'), (b'x-request-id', b'req_01jcyxs37kfc8v5z1e5hr43a3p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bee7495940cb-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:01:25,163 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:01:25,163 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:25,163 - DEBUG - receive_response_body.complete
2024-11-18 13:01:25,163 - DEBUG - response_closed.started
2024-11-18 13:01:25,163 - DEBUG - response_closed.complete
2024-11-18 13:01:25,163 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:01:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '818', 'x-ratelimit-reset-requests': '17.2s', 'x-ratelimit-reset-tokens': '51.818999999s', 'x-request-id': 'req_01jcyxs37kfc8v5z1e5hr43a3p', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bee7495940cb-SIN', 'content-encoding': 'gzip'})
2024-11-18 13:01:25,382 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:25,382 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:25,382 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:25,382 - DEBUG - send_request_headers.complete
2024-11-18 13:01:25,382 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:25,382 - DEBUG - send_request_body.complete
2024-11-18 13:01:25,382 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:25,618 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 18 Nov 2024 06:01:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'331'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'12'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'129'), (b'x-ratelimit-reset-requests', b'16.879s'), (b'x-ratelimit-reset-tokens', b'58.703999999s'), (b'x-request-id', b'req_01jcyxs4ayecgsdzr1bb76gde9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45beee5cad40cb-SIN')])
2024-11-18 13:01:25,618 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2024-11-18 13:01:25,618 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:25,618 - DEBUG - receive_response_body.complete
2024-11-18 13:01:25,618 - DEBUG - response_closed.started
2024-11-18 13:01:25,618 - DEBUG - response_closed.complete
2024-11-18 13:01:25,618 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Mon, 18 Nov 2024 06:01:25 GMT', 'content-type': 'application/json', 'content-length': '331', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '12', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '129', 'x-ratelimit-reset-requests': '16.879s', 'x-ratelimit-reset-tokens': '58.703999999s', 'x-request-id': 'req_01jcyxs4ayecgsdzr1bb76gde9', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45beee5cad40cb-SIN'})
2024-11-18 13:01:25,618 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\groq\_base_client.py", line 997, in _request
    response.raise_for_status()
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\httpx\_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2024-11-18 13:01:25,653 - DEBUG - Retrying due to status code 429
2024-11-18 13:01:25,653 - DEBUG - 1 retry left
2024-11-18 13:01:25,653 - INFO - Retrying request to /openai/v1/chat/completions in 12.000000 seconds
2024-11-18 13:01:37,663 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:37,664 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:37,665 - DEBUG - close.started
2024-11-18 13:01:37,666 - DEBUG - close.complete
2024-11-18 13:01:37,666 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-18 13:01:37,696 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294E20050>
2024-11-18 13:01:37,696 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021294594710> server_hostname='api.groq.com' timeout=None
2024-11-18 13:01:37,739 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021291C5D690>
2024-11-18 13:01:37,739 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:37,740 - DEBUG - send_request_headers.complete
2024-11-18 13:01:37,740 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:37,740 - DEBUG - send_request_body.complete
2024-11-18 13:01:37,740 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:38,431 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:01:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'95'), (b'x-ratelimit-reset-requests', b'10.531999999s'), (b'x-ratelimit-reset-tokens', b'59.048s'), (b'x-request-id', b'req_01jcyxsgcweh5b0v9t5rcthn0v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bf3b8aa5ce52-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:01:38,431 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:01:38,431 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:38,431 - DEBUG - receive_response_body.complete
2024-11-18 13:01:38,431 - DEBUG - response_closed.started
2024-11-18 13:01:38,431 - DEBUG - response_closed.complete
2024-11-18 13:01:38,431 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:01:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '95', 'x-ratelimit-reset-requests': '10.531999999s', 'x-ratelimit-reset-tokens': '59.048s', 'x-request-id': 'req_01jcyxsgcweh5b0v9t5rcthn0v', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bf3b8aa5ce52-SIN', 'content-encoding': 'gzip'})
2024-11-18 13:01:38,991 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e01\u0e33\u0e44\u0e23\u0e2a\u0e38\u0e17\u0e18\u0e34\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e04\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:38,991 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:38,991 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:38,991 - DEBUG - send_request_headers.complete
2024-11-18 13:01:38,991 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:38,991 - DEBUG - send_request_body.complete
2024-11-18 13:01:38,991 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:39,209 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 18 Nov 2024 06:01:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'331'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'19'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'-580'), (b'x-ratelimit-reset-requests', b'10.747999999s'), (b'x-ratelimit-reset-tokens', b'1m5.807s'), (b'x-request-id', b'req_01jcyxshkyeaksv4gma50770yp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bf436ef1ce52-SIN')])
2024-11-18 13:01:39,209 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2024-11-18 13:01:39,209 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:39,209 - DEBUG - receive_response_body.complete
2024-11-18 13:01:39,209 - DEBUG - response_closed.started
2024-11-18 13:01:39,209 - DEBUG - response_closed.complete
2024-11-18 13:01:39,209 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Mon, 18 Nov 2024 06:01:39 GMT', 'content-type': 'application/json', 'content-length': '331', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '19', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '-580', 'x-ratelimit-reset-requests': '10.747999999s', 'x-ratelimit-reset-tokens': '1m5.807s', 'x-request-id': 'req_01jcyxshkyeaksv4gma50770yp', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bf436ef1ce52-SIN'})
2024-11-18 13:01:39,209 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\groq\_base_client.py", line 997, in _request
    response.raise_for_status()
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\httpx\_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2024-11-18 13:01:39,209 - DEBUG - Retrying due to status code 429
2024-11-18 13:01:39,209 - DEBUG - 1 retry left
2024-11-18 13:01:39,209 - INFO - Retrying request to /openai/v1/chat/completions in 19.000000 seconds
2024-11-18 13:01:58,222 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e01\u0e33\u0e44\u0e23\u0e2a\u0e38\u0e17\u0e18\u0e34\u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 BBL \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e04\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:58,222 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:58,222 - DEBUG - close.started
2024-11-18 13:01:58,222 - DEBUG - close.complete
2024-11-18 13:01:58,222 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-18 13:01:58,248 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294CC7E90>
2024-11-18 13:01:58,248 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021294594710> server_hostname='api.groq.com' timeout=None
2024-11-18 13:01:58,280 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294C84990>
2024-11-18 13:01:58,280 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:58,280 - DEBUG - send_request_headers.complete
2024-11-18 13:01:58,280 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:58,280 - DEBUG - send_request_body.complete
2024-11-18 13:01:58,280 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:59,071 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:01:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'79'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.203s'), (b'x-request-id', b'req_01jcyxt4fbf4pa11fvgqnzma9c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bfbc0d998814-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:01:59,071 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:01:59,071 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:59,071 - DEBUG - receive_response_body.complete
2024-11-18 13:01:59,071 - DEBUG - response_closed.started
2024-11-18 13:01:59,071 - DEBUG - response_closed.complete
2024-11-18 13:01:59,071 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:01:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '79', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.203s', 'x-request-id': 'req_01jcyxt4fbf4pa11fvgqnzma9c', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bfbc0d998814-SIN', 'content-encoding': 'gzip'})
2024-11-18 13:01:59,368 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e2d\u0e31\u0e15\u0e23\u0e32\u0e1c\u0e25\u0e15\u0e2d\u0e1a\u0e41\u0e17\u0e19\u0e15\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e16\u0e37\u0e2d\u0e2b\u0e38\u0e49\u0e19 (ROE) \u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 BCP \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e04\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:01:59,368 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:01:59,368 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:01:59,368 - DEBUG - send_request_headers.complete
2024-11-18 13:01:59,368 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:01:59,368 - DEBUG - send_request_body.complete
2024-11-18 13:01:59,368 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:01:59,838 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 18 Nov 2024 06:01:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'330'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'19'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-605'), (b'x-ratelimit-reset-requests', b'4.723s'), (b'x-ratelimit-reset-tokens', b'1m6.05s'), (b'x-request-id', b'req_01jcyxt5q4f6a9ecy7r0tndkwf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45bfc3fcdd8814-SIN')])
2024-11-18 13:01:59,838 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2024-11-18 13:01:59,838 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:01:59,838 - DEBUG - receive_response_body.complete
2024-11-18 13:01:59,838 - DEBUG - response_closed.started
2024-11-18 13:01:59,838 - DEBUG - response_closed.complete
2024-11-18 13:01:59,838 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Mon, 18 Nov 2024 06:01:59 GMT', 'content-type': 'application/json', 'content-length': '330', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '19', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-605', 'x-ratelimit-reset-requests': '4.723s', 'x-ratelimit-reset-tokens': '1m6.05s', 'x-request-id': 'req_01jcyxt5q4f6a9ecy7r0tndkwf', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45bfc3fcdd8814-SIN'})
2024-11-18 13:01:59,838 - DEBUG - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\groq\_base_client.py", line 997, in _request
    response.raise_for_status()
  File "C:\Users\china\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\httpx\_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2024-11-18 13:01:59,838 - DEBUG - Retrying due to status code 429
2024-11-18 13:01:59,838 - DEBUG - 1 retry left
2024-11-18 13:01:59,838 - INFO - Retrying request to /openai/v1/chat/completions in 19.000000 seconds
2024-11-18 13:02:18,843 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e2d\u0e31\u0e15\u0e23\u0e32\u0e1c\u0e25\u0e15\u0e2d\u0e1a\u0e41\u0e17\u0e19\u0e15\u0e48\u0e2d\u0e1c\u0e39\u0e49\u0e16\u0e37\u0e2d\u0e2b\u0e38\u0e49\u0e19 (ROE) \u0e02\u0e2d\u0e07\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 BCP \u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e04\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-18 13:02:18,843 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-18 13:02:18,843 - DEBUG - close.started
2024-11-18 13:02:18,845 - DEBUG - close.complete
2024-11-18 13:02:18,845 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-18 13:02:18,873 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294D8A110>
2024-11-18 13:02:18,873 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021294594710> server_hostname='api.groq.com' timeout=None
2024-11-18 13:02:18,915 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021294E81A10>
2024-11-18 13:02:18,915 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-18 13:02:18,915 - DEBUG - send_request_headers.complete
2024-11-18 13:02:18,915 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-18 13:02:18,915 - DEBUG - send_request_body.complete
2024-11-18 13:02:18,915 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-18 13:02:19,818 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 06:02:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'42'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.571999999s'), (b'x-request-id', b'req_01jcyxtrkrfjzshqc9b2xwtxx3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e45c03cef9b4494-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-18 13:02:19,818 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-18 13:02:19,818 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-18 13:02:19,818 - DEBUG - receive_response_body.complete
2024-11-18 13:02:19,818 - DEBUG - response_closed.started
2024-11-18 13:02:19,818 - DEBUG - response_closed.complete
2024-11-18 13:02:19,818 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 06:02:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '42', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.571999999s', 'x-request-id': 'req_01jcyxtrkrfjzshqc9b2xwtxx3', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e45c03cef9b4494-SIN', 'content-encoding': 'gzip'})
2024-11-19 00:29:06,718 - DEBUG - Building SSL context
2024-11-19 00:29:06,750 - DEBUG - Switching to SSL
2024-11-19 00:29:06,753 - DEBUG - SSL has been enabled
2024-11-19 00:29:06,753 - DEBUG - Starting authorization phase
2024-11-19 00:29:06,753 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 00:29:06,753 - DEBUG - Exchanging further packets
2024-11-19 00:29:06,753 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 00:29:06,975 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-19 00:29:06,975 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-19 00:29:06,976 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-19 00:29:07,091 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022E1CE53AD0>
2024-11-19 00:29:07,091 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022E1BBC9250> server_hostname='api.groq.com' timeout=None
2024-11-19 00:29:07,107 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022E1CDCB750>
2024-11-19 00:29:07,107 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-19 00:29:07,108 - DEBUG - send_request_headers.complete
2024-11-19 00:29:07,108 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-19 00:29:07,108 - DEBUG - send_request_body.complete
2024-11-19 00:29:07,108 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-19 00:29:07,537 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 17:29:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4729'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.71s'), (b'x-request-id', b'req_01jd054ahzesbr26vxs8jb309e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=KrFCG3xHrdZiApPHcNyZ4Xa3vQsKjKNahku.6e0lR.0-1731950947-1.0.1.1-ppe_OXj.CMXOUkjXIsIX.j2q5qRMfTmfNEjuVqfZqFzAVc0yOuxJ7t1JyHXoF.UbS78p3X4xodOpYYy52fM5jw; path=/; expires=Mon, 18-Nov-24 17:59:07 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e49ae48e9427dc3-BKK'), (b'Content-Encoding', b'gzip')])
2024-11-19 00:29:07,537 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-19 00:29:07,538 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-19 00:29:07,540 - DEBUG - receive_response_body.complete
2024-11-19 00:29:07,540 - DEBUG - response_closed.started
2024-11-19 00:29:07,540 - DEBUG - response_closed.complete
2024-11-19 00:29:07,540 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 17:29:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4729', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.71s', 'x-request-id': 'req_01jd054ahzesbr26vxs8jb309e', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=KrFCG3xHrdZiApPHcNyZ4Xa3vQsKjKNahku.6e0lR.0-1731950947-1.0.1.1-ppe_OXj.CMXOUkjXIsIX.j2q5qRMfTmfNEjuVqfZqFzAVc0yOuxJ7t1JyHXoF.UbS78p3X4xodOpYYy52fM5jw; path=/; expires=Mon, 18-Nov-24 17:59:07 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '8e49ae48e9427dc3-BKK', 'content-encoding': 'gzip'})
2024-11-19 00:29:57,451 - DEBUG - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': 'You are a MySQL expert. Given an input question, first create a syntactically correct MySQL query to run, then look at the results of the query and return the answer to the input question.\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per MySQL. You can order the results to return the most informative data in the database.\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in backticks (`) to denote them as delimited identifiers.\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\nPay attention to use CURDATE() function to get the current date, if the question involves "today".\n\nUse the following format:\n\nQuestion: Question here\nSQLQuery: SQL Query to run\nSQLResult: Result of the SQLQuery\nAnswer: Final answer here\n\nOnly use the following tables:\n\nCREATE TABLE filteredeoddata (\n\tdate DATE, \n\tsymbol VARCHAR(255), \n\t`securityType` VARCHAR(10), \n\t`adjustedPriceFlag` CHAR(1), \n\tprior DECIMAL(10, 2), \n\topen DECIMAL(10, 2), \n\thigh DECIMAL(10, 2), \n\tlow DECIMAL(10, 2), \n\tclose DECIMAL(10, 2), \n\taverage DECIMAL(15, 10), \n\t`aomVolume` DECIMAL(15, 2), \n\t`aomValue` DECIMAL(15, 2), \n\t`trVolume` DECIMAL(15, 2), \n\t`trValue` DECIMAL(15, 2), \n\t`totalVolume` DECIMAL(15, 2), \n\t`totalValue` DECIMAL(15, 2), \n\tpe DECIMAL(10, 2), \n\tpbv DECIMAL(10, 2), \n\tbvps DECIMAL(10, 2), \n\t`dividendYield` DECIMAL(10, 2), \n\t`marketCap` DECIMAL(20, 2), \n\t`volumeTurnover` DECIMAL(10, 8)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from filteredeoddata table:\ndate\tsymbol\tsecurityType\tadjustedPriceFlag\tprior\topen\thigh\tlow\tclose\taverage\taomVolume\taomValue\ttrVolume\ttrValue\ttotalVolume\ttotalValue\tpe\tpbv\tbvps\tdividendYield\tmarketCap\tvolumeTurnover\n2023-09-01\tADVANC\tCS\tY\t216.00\t216.00\t217.00\t214.00\t215.00\t215.2167792148\t3494800.00\t752139600.00\t0.00\t0.00\t3496605.00\t752528997.00\t23.40\t7.34\t29.29\t3.58\t639455093240.00\t0.11756753\n2023-09-01\tAOT\tCS\tY\t72.50\t72.75\t73.00\t72.25\t72.75\t72.6367529508\t13648700.00\t991397250.00\t0.00\t0.00\t13649846.00\t991480463.25\t258.12\t9.74\t7.47\tNone\t1039284675000.00\t0.09555532\n2023-09-01\tAWC\tCS\tY\t4.36\t4.36\t4.38\t4.24\t4.26\t4.2843272478\t64639700.00\t276937628.00\t0.00\t0.00\t64640345.00\t276940408.64\t27.40\t1.61\t2.65\t0.75\t136329982458.00\t0.20198629\n*/\n\n\nCREATE TABLE financial_statements (\n\tsymbol VARCHAR(50), \n\tyear INTEGER, \n\tquarter INTEGER, \n\t`financialStatementType` VARCHAR(10), \n\t`dateAsof` DATE, \n\t`accountPeriod` VARCHAR(10), \n\t`totalAssets` DECIMAL(20, 2), \n\t`totalLiabilities` DECIMAL(20, 2), \n\t`paidupShareCapital` DECIMAL(20, 2), \n\t`shareholderEquity` DECIMAL(20, 2), \n\t`totalEquity` DECIMAL(20, 2), \n\t`totalRevenueQuarter` DECIMAL(20, 2), \n\t`totalRevenueAccum` DECIMAL(20, 2), \n\t`totalExpensesQuarter` DECIMAL(20, 2), \n\t`totalExpensesAccum` DECIMAL(20, 2), \n\t`ebitQuarter` DECIMAL(20, 2), \n\t`ebitAccum` DECIMAL(20, 2), \n\t`netProfitQuarter` DECIMAL(20, 2), \n\t`netProfitAccum` DECIMAL(20, 2), \n\t`epsQuarter` DECIMAL(10, 2), \n\t`epsAccum` DECIMAL(10, 2), \n\t`operatingCashFlow` DECIMAL(20, 2), \n\t`investingCashFlow` DECIMAL(20, 2), \n\t`financingCashFlow` DECIMAL(20, 2), \n\troe DECIMAL(10, 2), \n\troa DECIMAL(10, 2), \n\t`netProfitMarginQuarter` DECIMAL(10, 2), \n\t`netProfitMarginAccum` DECIMAL(10, 2), \n\tde DECIMAL(10, 2), \n\t`fixedAssetTurnover` DECIMAL(10, 2), \n\t`totalAssetTurnover` DECIMAL(10, 2)\n)ENGINE=InnoDB COLLATE utf8mb4_0900_ai_ci DEFAULT CHARSET=utf8mb4\n\n/*\n3 rows from financial_statements table:\nsymbol\tyear\tquarter\tfinancialStatementType\tdateAsof\taccountPeriod\ttotalAssets\ttotalLiabilities\tpaidupShareCapital\tshareholderEquity\ttotalEquity\ttotalRevenueQuarter\ttotalRevenueAccum\ttotalExpensesQuarter\ttotalExpensesAccum\tebitQuarter\tebitAccum\tnetProfitQuarter\tnetProfitAccum\tepsQuarter\tepsAccum\toperatingCashFlow\tinvestingCashFlow\tfinancingCashFlow\troe\troa\tnetProfitMarginQuarter\tnetProfitMarginAccum\tde\tfixedAssetTurnover\ttotalAssetTurnover\nADVANC\t2019\t1\tC\t2019-03-31\tC\t296633567.00\t239864965.00\t2973095.00\t56641586.00\t56768602.00\t43516543.00\t43516543.00\t33272716.00\t33272716.00\t10311085.00\t10311085.00\t7570026.00\t7570026.00\t2.55\t2.55\t20611383.00\t-3068033.00\t-6118754.00\t55.99\t13.75\t17.40\t17.40\t4.23\t1.32\t0.59\nAOT\t2019\t1\tC\t2019-03-31\tC\t181143997.77\t37643003.03\t14285700.00\t142951623.29\t143500994.73\t17457471.60\t17457471.60\t7737697.97\t7737697.97\t9810844.36\t9810844.36\t7646501.84\t7646501.84\t0.54\t0.54\t10148659.30\t4627415.41\t-16681808.61\t18.68\t18.40\t43.90\t43.90\t0.26\t0.67\t0.36\nBBL\t2019\t1\tC\t2019-03-31\tC\t3148836302.00\t2723140802.00\t19088429.00\t425255994.00\t425695500.00\t38862314.00\t38862314.00\t30092113.00\t30092113.00\t21413289.00\t21413289.00\t9028296.00\t9028296.00\t4.73\t4.73\t9102208.00\t-12584040.00\t43414.00\t8.51\t2.66\t23.48\t23.48\t6.40\tNone\t0.05\n*/\n\nQuestion: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48\nSQLQuery: '}], 'model': 'llama3-70b-8192', 'n': 1, 'stop': ['\nSQLResult:'], 'stream': False, 'temperature': 0.7}}
2024-11-19 00:29:57,451 - DEBUG - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2024-11-19 00:29:57,451 - DEBUG - close.started
2024-11-19 00:29:57,451 - DEBUG - close.complete
2024-11-19 00:29:57,451 - DEBUG - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=None socket_options=None
2024-11-19 00:29:57,479 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022E1CF38590>
2024-11-19 00:29:57,479 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000022E1BBC9250> server_hostname='api.groq.com' timeout=None
2024-11-19 00:29:57,514 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000022E1CFF0190>
2024-11-19 00:29:57,514 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2024-11-19 00:29:57,514 - DEBUG - send_request_headers.complete
2024-11-19 00:29:57,514 - DEBUG - send_request_body.started request=<Request [b'POST']>
2024-11-19 00:29:57,514 - DEBUG - send_request_body.complete
2024-11-19 00:29:57,514 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2024-11-19 00:29:58,458 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 18 Nov 2024 17:29:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'4729'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'12.71s'), (b'x-request-id', b'req_01jd055vr4e9erb0h5k9tbfbbp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8e49af8409e5ce2b-SIN'), (b'Content-Encoding', b'gzip')])
2024-11-19 00:29:58,458 - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2024-11-19 00:29:58,458 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2024-11-19 00:29:58,458 - DEBUG - receive_response_body.complete
2024-11-19 00:29:58,458 - DEBUG - response_closed.started
2024-11-19 00:29:58,458 - DEBUG - response_closed.complete
2024-11-19 00:29:58,458 - DEBUG - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Mon, 18 Nov 2024 17:29:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '4729', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '12.71s', 'x-request-id': 'req_01jd055vr4e9erb0h5k9tbfbbp', 'via': '1.1 google', 'alt-svc': 'h3=":443"; ma=86400', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8e49af8409e5ce2b-SIN', 'content-encoding': 'gzip'})
2024-11-19 00:48:19,632 - DEBUG - Building SSL context
2024-11-19 00:48:19,665 - DEBUG - Switching to SSL
2024-11-19 00:48:19,667 - DEBUG - SSL has been enabled
2024-11-19 00:48:19,668 - DEBUG - Starting authorization phase
2024-11-19 00:48:19,668 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 00:48:19,668 - DEBUG - Exchanging further packets
2024-11-19 00:48:19,668 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 11:58:31,760 - DEBUG - Building SSL context
2024-11-19 11:58:31,814 - DEBUG - Switching to SSL
2024-11-19 11:58:31,818 - DEBUG - SSL has been enabled
2024-11-19 11:58:31,818 - DEBUG - Starting authorization phase
2024-11-19 11:58:31,818 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 11:58:31,818 - DEBUG - Exchanging further packets
2024-11-19 11:58:31,818 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 14:04:47,638 - DEBUG - Building SSL context
2024-11-19 14:04:47,687 - DEBUG - Switching to SSL
2024-11-19 14:04:47,693 - DEBUG - SSL has been enabled
2024-11-19 14:04:47,693 - DEBUG - Starting authorization phase
2024-11-19 14:04:47,693 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 14:04:47,694 - DEBUG - Exchanging further packets
2024-11-19 14:04:47,694 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 14:18:58,111 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:18:58,112 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:18:58,432 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:18:58,432 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:24:06,899 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:24:06,899 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:24:07,132 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:24:07,133 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:26:07,978 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:26:07,978 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:26:08,228 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:26:08,228 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:29:41,909 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:29:41,909 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:29:42,173 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:29:42,173 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:33:06,911 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:33:06,917 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:33:07,137 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:33:07,137 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:34:53,541 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:34:53,541 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:34:53,801 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:34:53,801 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:36:08,881 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:36:08,881 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:36:09,144 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:36:09,144 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:00,263 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:00,263 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:00,509 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:00,509 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:04,412 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:04,412 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:04,637 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:04,637 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:36,470 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:36,471 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:37:36,745 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:37:36,745 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:38:46,807 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:38:46,807 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:38:47,042 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:38:47,042 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:41:53,641 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:41:53,641 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:41:53,917 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:41:53,917 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:44:05,965 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:44:05,965 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:44:06,161 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:44:06,161 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:45:26,602 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:45:26,602 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:45:26,840 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:45:26,840 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:48:08,929 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:48:08,931 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:48:09,129 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:48:09,129 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:48:27,334 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:48:27,334 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:48:27,588 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:48:27,589 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:52:57,926 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:52:57,926 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:52:58,161 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:52:58,161 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:54:16,879 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:54:16,879 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:54:17,112 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:54:17,112 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:59:34,835 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:59:34,835 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:59:35,033 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:59:35,033 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:59:37,570 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:59:37,575 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 14:59:37,788 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 14:59:37,788 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:05:42,818 - DEBUG - Building SSL context
2024-11-19 15:05:42,872 - DEBUG - Switching to SSL
2024-11-19 15:05:42,873 - DEBUG - SSL has been enabled
2024-11-19 15:05:42,873 - DEBUG - Starting authorization phase
2024-11-19 15:05:42,873 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:05:42,873 - DEBUG - Exchanging further packets
2024-11-19 15:05:42,873 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:05:52,247 - DEBUG - Building SSL context
2024-11-19 15:05:52,300 - DEBUG - Switching to SSL
2024-11-19 15:05:52,309 - DEBUG - SSL has been enabled
2024-11-19 15:05:52,309 - DEBUG - Starting authorization phase
2024-11-19 15:05:52,309 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:05:52,309 - DEBUG - Exchanging further packets
2024-11-19 15:05:52,309 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:05:57,486 - DEBUG - Building SSL context
2024-11-19 15:05:57,568 - DEBUG - Switching to SSL
2024-11-19 15:05:57,575 - DEBUG - SSL has been enabled
2024-11-19 15:05:57,575 - DEBUG - Starting authorization phase
2024-11-19 15:05:57,575 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:05:57,575 - DEBUG - Exchanging further packets
2024-11-19 15:05:57,575 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:06:15,910 - DEBUG - Building SSL context
2024-11-19 15:06:15,970 - DEBUG - Switching to SSL
2024-11-19 15:06:15,977 - DEBUG - SSL has been enabled
2024-11-19 15:06:15,977 - DEBUG - Starting authorization phase
2024-11-19 15:06:15,977 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:06:15,977 - DEBUG - Exchanging further packets
2024-11-19 15:06:15,977 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:06:36,623 - DEBUG - Building SSL context
2024-11-19 15:06:36,684 - DEBUG - Switching to SSL
2024-11-19 15:06:36,692 - DEBUG - SSL has been enabled
2024-11-19 15:06:36,692 - DEBUG - Starting authorization phase
2024-11-19 15:06:36,692 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:06:36,692 - DEBUG - Exchanging further packets
2024-11-19 15:06:36,692 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:09:28,711 - DEBUG - Building SSL context
2024-11-19 15:09:28,752 - DEBUG - Switching to SSL
2024-11-19 15:09:28,755 - DEBUG - SSL has been enabled
2024-11-19 15:09:28,756 - DEBUG - Starting authorization phase
2024-11-19 15:09:28,756 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:09:28,756 - DEBUG - Exchanging further packets
2024-11-19 15:09:28,757 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:11:22,827 - DEBUG - Building SSL context
2024-11-19 15:11:22,873 - DEBUG - Switching to SSL
2024-11-19 15:11:22,877 - DEBUG - SSL has been enabled
2024-11-19 15:11:22,877 - DEBUG - Starting authorization phase
2024-11-19 15:11:22,877 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:11:22,877 - DEBUG - Exchanging further packets
2024-11-19 15:11:22,877 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:12:50,544 - DEBUG - Building SSL context
2024-11-19 15:12:50,591 - DEBUG - Switching to SSL
2024-11-19 15:12:50,595 - DEBUG - SSL has been enabled
2024-11-19 15:12:50,595 - DEBUG - Starting authorization phase
2024-11-19 15:12:50,595 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:12:50,596 - DEBUG - Exchanging further packets
2024-11-19 15:12:50,597 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:28:00,814 - DEBUG - Building SSL context
2024-11-19 15:28:00,845 - DEBUG - Switching to SSL
2024-11-19 15:28:00,845 - DEBUG - SSL has been enabled
2024-11-19 15:28:00,845 - DEBUG - Starting authorization phase
2024-11-19 15:28:00,845 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:28:00,845 - DEBUG - Exchanging further packets
2024-11-19 15:28:00,845 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:28:05,353 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:28:05,353 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:28:05,353 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:28:05,620 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:28:05,620 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:28:05,620 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:28:05,620 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:28:05,629 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:29:20,386 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:29:20,387 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:29:20,387 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:29:20,392 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:29:20,396 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:29:20,396 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:29:20,396 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:29:20,402 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:31:03,063 - DEBUG - Building SSL context
2024-11-19 15:31:03,097 - DEBUG - Switching to SSL
2024-11-19 15:31:03,100 - DEBUG - SSL has been enabled
2024-11-19 15:31:03,101 - DEBUG - Starting authorization phase
2024-11-19 15:31:03,101 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:31:03,101 - DEBUG - Exchanging further packets
2024-11-19 15:31:03,101 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:31:03,148 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:31:03,148 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:31:03,150 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:31:03,174 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:31:03,174 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:31:03,174 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:31:03,174 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 AOT \u0e21\u0e35\u0e2b\u0e19\u0e35\u0e49\u0e2a\u0e34\u0e19\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:31:03,181 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:33:38,449 - DEBUG - Building SSL context
2024-11-19 15:33:38,490 - DEBUG - Switching to SSL
2024-11-19 15:33:38,493 - DEBUG - SSL has been enabled
2024-11-19 15:33:38,493 - DEBUG - Starting authorization phase
2024-11-19 15:33:38,493 - DEBUG - The provided initial strategy is caching_sha2_password
2024-11-19 15:33:38,494 - DEBUG - Exchanging further packets
2024-11-19 15:33:38,494 - DEBUG - caching_sha2_password completed succesfully
2024-11-19 15:33:45,035 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:33:45,036 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:33:45,036 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:33:45,058 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:34:00,190 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:34:00,190 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:34:00,190 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:34:00,197 - ERROR - Error during query generation or execution: 'query'
2024-11-19 15:34:02,263 - DEBUG - Input question: \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48
2024-11-19 15:34:02,264 - DEBUG - Schema passed to invoke: Table: filteredeoddata
  - Column: date, Type: DATE
  - Column: symbol, Type: VARCHAR(255)
  - Column: securityType, Type: VARCHAR(10)
  - Column: adjustedPriceFlag, Type: CHAR(1)
  - Column: prior, Type: DECIMAL(10, 2)
  - Column: open, Type: DECIMAL(10, 2)
  - Column: high, Type: DECIMAL(10, 2)
  - Column: low, Type: DECIMAL(10, 2)
  - Column: close, Type: DECIMAL(10, 2)
  - Column: average, Type: DECIMAL(15, 10)
  - Column: aomVolume, Type: DECIMAL(15, 2)
  - Column: aomValue, Type: DECIMAL(15, 2)
  - Column: trVolume, Type: DECIMAL(15, 2)
  - Column: trValue, Type: DECIMAL(15, 2)
  - Column: totalVolume, Type: DECIMAL(15, 2)
  - Column: totalValue, Type: DECIMAL(15, 2)
  - Column: pe, Type: DECIMAL(10, 2)
  - Column: pbv, Type: DECIMAL(10, 2)
  - Column: bvps, Type: DECIMAL(10, 2)
  - Column: dividendYield, Type: DECIMAL(10, 2)
  - Column: marketCap, Type: DECIMAL(20, 2)
  - Column: volumeTurnover, Type: DECIMAL(10, 8)
Table: financial_statements
  - Column: symbol, Type: VARCHAR(50)
  - Column: year, Type: INTEGER
  - Column: quarter, Type: INTEGER
  - Column: financialStatementType, Type: VARCHAR(10)
  - Column: dateAsof, Type: DATE
  - Column: accountPeriod, Type: VARCHAR(10)
  - Column: totalAssets, Type: DECIMAL(20, 2)
  - Column: totalLiabilities, Type: DECIMAL(20, 2)
  - Column: paidupShareCapital, Type: DECIMAL(20, 2)
  - Column: shareholderEquity, Type: DECIMAL(20, 2)
  - Column: totalEquity, Type: DECIMAL(20, 2)
  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)
  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)
  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)
  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)
  - Column: ebitQuarter, Type: DECIMAL(20, 2)
  - Column: ebitAccum, Type: DECIMAL(20, 2)
  - Column: netProfitQuarter, Type: DECIMAL(20, 2)
  - Column: netProfitAccum, Type: DECIMAL(20, 2)
  - Column: epsQuarter, Type: DECIMAL(10, 2)
  - Column: epsAccum, Type: DECIMAL(10, 2)
  - Column: operatingCashFlow, Type: DECIMAL(20, 2)
  - Column: investingCashFlow, Type: DECIMAL(20, 2)
  - Column: financingCashFlow, Type: DECIMAL(20, 2)
  - Column: roe, Type: DECIMAL(10, 2)
  - Column: roa, Type: DECIMAL(10, 2)
  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)
  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)
  - Column: de, Type: DECIMAL(10, 2)
  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)
  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)

2024-11-19 15:34:02,264 - DEBUG - Data passed to mysql_qa: {'question': '\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 ADVANC \u0e21\u0e35\u0e2a\u0e34\u0e19\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e4c\u0e23\u0e27\u0e21\u0e43\u0e19\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48 1 \u0e1b\u0e35 2019 \u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48', 'schema': 'Table: filteredeoddata\n  - Column: date, Type: DATE\n  - Column: symbol, Type: VARCHAR(255)\n  - Column: securityType, Type: VARCHAR(10)\n  - Column: adjustedPriceFlag, Type: CHAR(1)\n  - Column: prior, Type: DECIMAL(10, 2)\n  - Column: open, Type: DECIMAL(10, 2)\n  - Column: high, Type: DECIMAL(10, 2)\n  - Column: low, Type: DECIMAL(10, 2)\n  - Column: close, Type: DECIMAL(10, 2)\n  - Column: average, Type: DECIMAL(15, 10)\n  - Column: aomVolume, Type: DECIMAL(15, 2)\n  - Column: aomValue, Type: DECIMAL(15, 2)\n  - Column: trVolume, Type: DECIMAL(15, 2)\n  - Column: trValue, Type: DECIMAL(15, 2)\n  - Column: totalVolume, Type: DECIMAL(15, 2)\n  - Column: totalValue, Type: DECIMAL(15, 2)\n  - Column: pe, Type: DECIMAL(10, 2)\n  - Column: pbv, Type: DECIMAL(10, 2)\n  - Column: bvps, Type: DECIMAL(10, 2)\n  - Column: dividendYield, Type: DECIMAL(10, 2)\n  - Column: marketCap, Type: DECIMAL(20, 2)\n  - Column: volumeTurnover, Type: DECIMAL(10, 8)\nTable: financial_statements\n  - Column: symbol, Type: VARCHAR(50)\n  - Column: year, Type: INTEGER\n  - Column: quarter, Type: INTEGER\n  - Column: financialStatementType, Type: VARCHAR(10)\n  - Column: dateAsof, Type: DATE\n  - Column: accountPeriod, Type: VARCHAR(10)\n  - Column: totalAssets, Type: DECIMAL(20, 2)\n  - Column: totalLiabilities, Type: DECIMAL(20, 2)\n  - Column: paidupShareCapital, Type: DECIMAL(20, 2)\n  - Column: shareholderEquity, Type: DECIMAL(20, 2)\n  - Column: totalEquity, Type: DECIMAL(20, 2)\n  - Column: totalRevenueQuarter, Type: DECIMAL(20, 2)\n  - Column: totalRevenueAccum, Type: DECIMAL(20, 2)\n  - Column: totalExpensesQuarter, Type: DECIMAL(20, 2)\n  - Column: totalExpensesAccum, Type: DECIMAL(20, 2)\n  - Column: ebitQuarter, Type: DECIMAL(20, 2)\n  - Column: ebitAccum, Type: DECIMAL(20, 2)\n  - Column: netProfitQuarter, Type: DECIMAL(20, 2)\n  - Column: netProfitAccum, Type: DECIMAL(20, 2)\n  - Column: epsQuarter, Type: DECIMAL(10, 2)\n  - Column: epsAccum, Type: DECIMAL(10, 2)\n  - Column: operatingCashFlow, Type: DECIMAL(20, 2)\n  - Column: investingCashFlow, Type: DECIMAL(20, 2)\n  - Column: financingCashFlow, Type: DECIMAL(20, 2)\n  - Column: roe, Type: DECIMAL(10, 2)\n  - Column: roa, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginQuarter, Type: DECIMAL(10, 2)\n  - Column: netProfitMarginAccum, Type: DECIMAL(10, 2)\n  - Column: de, Type: DECIMAL(10, 2)\n  - Column: fixedAssetTurnover, Type: DECIMAL(10, 2)\n  - Column: totalAssetTurnover, Type: DECIMAL(10, 2)\n'}
2024-11-19 15:34:02,271 - ERROR - Error during query generation or execution: 'query'
